{"name":"Github-Auto-Deploy","body":"### What is it?\r\n\r\nthis is a small HTTP server written in python. \r\nIt allows you to have a version of your project installed, that will be updated automatically on each Github push.\r\n\r\nTo set it up, do the following:\r\n* install python\r\n* enter the matching for your project(s) in the GitAutoDeploy.conf.json file\r\n* start the server by typing \"python GitAutoDeploy.py\" \r\n* to run it as a deamon add ==--deamon-mode==\r\n* On the Github page go to a repository, then \"Admin\", \"Service Hooks\", \r\n\"Post-Receive URLs\" and add the url of your machine + port (e.g. http://example.com:8001).\r\n\r\nYou can even test the whole thing here, by clicking on the \"Test Hook\" button, whohoo!\r\n\r\n### How this works\r\n\r\nWhen someone pushes changes into Github, it sends a json file to the service hook url. \r\nIt contains information about the repository that was updated.\r\n\r\nAll it really does is match the repository urls to your local repository paths in the config file, \r\nmove there and run \"git pull\".\r\n\r\n\r\nAdditionally it runs a deploy bash command that you can add to the config file optionally.\r\nMake sure that you start the server as the user that is allowed to pull from the github repository.","tagline":"a server that allows you to automatically deploy the latest version of your github project at each git push","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}